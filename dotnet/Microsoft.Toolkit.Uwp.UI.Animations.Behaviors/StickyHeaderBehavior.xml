<Type Name="StickyHeaderBehavior" FullName="Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior">
  <TypeSignature Language="C#" Value="public class StickyHeaderBehavior : Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.BehaviorBase&lt;Windows.UI.Xaml.FrameworkElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StickyHeaderBehavior extends Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.BehaviorBase`1&lt;class Windows.UI.Xaml.FrameworkElement&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class StickyHeaderBehavior&#xA;Inherits BehaviorBase(Of FrameworkElement)" />
  <TypeSignature Language="F#" Value="type StickyHeaderBehavior = class&#xA;    inherit BehaviorBase&lt;FrameworkElement&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class StickyHeaderBehavior : Microsoft::Toolkit::Uwp::UI::Animations::Behaviors::BehaviorBase&lt;Windows::UI::Xaml::FrameworkElement ^&gt;" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class StickyHeaderBehavior : Microsoft::Toolkit::Uwp::UI::Animations::Behaviors::BehaviorBase&lt;Windows::UI::Xaml::FrameworkElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.BehaviorBase&lt;Windows.UI.Xaml.FrameworkElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Windows.UI.Xaml.FrameworkElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Performs an animation on a ListView or GridView Header to make it sticky using composition.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StickyHeaderBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StickyHeaderBehavior();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; StickyHeaderBehavior();" />
      <MemberSignature Language="C++ WINRT" Value=" StickyHeaderBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderElement">
      <MemberSignature Language="C#" Value="public Windows.UI.Xaml.UIElement HeaderElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Windows.UI.Xaml.UIElement HeaderElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior.HeaderElement" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderElement As UIElement" />
      <MemberSignature Language="F#" Value="member this.HeaderElement : Windows.UI.Xaml.UIElement with get, set" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior.HeaderElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Windows::UI::Xaml::UIElement ^ HeaderElement { Windows::UI::Xaml::UIElement ^ get(); void set(Windows::UI::Xaml::UIElement ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Windows::UI::Xaml::UIElement ^ HeaderElement { Windows::UI::Xaml::UIElement ^ get(); void set(Windows::UI::Xaml::UIElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.UI.Xaml.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the target element for the ScrollHeader behavior.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set this using the header of a ListView or GridView.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderElementProperty">
      <MemberSignature Language="C#" Value="public static readonly Windows.UI.Xaml.DependencyProperty HeaderElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Windows.UI.Xaml.DependencyProperty HeaderElementProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior.HeaderElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderElementProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderElementProperty : Windows.UI.Xaml.DependencyProperty" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior.HeaderElementProperty" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Windows::UI::Xaml::DependencyProperty ^ HeaderElementProperty;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly winrt::Windows::UI::Xaml::DependencyProperty HeaderElementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The UIElement that will be faded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override bool Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Initialize () As Boolean" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; bool" Usage="stickyHeaderBehavior.Initialize " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool Initialize();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; override bool Initialize();" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Attaches the behavior to the associated object.
            </summary>
        <returns>
          <c>true</c> if attaching succeeded; otherwise <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="stickyHeaderBehavior.Show " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Show();" />
      <MemberSignature Language="C++ WINRT" Value="void Show();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Show the header
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninitialize">
      <MemberSignature Language="C#" Value="protected override bool Uninitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool Uninitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors.StickyHeaderBehavior.Uninitialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Uninitialize () As Boolean" />
      <MemberSignature Language="F#" Value="override this.Uninitialize : unit -&gt; bool" Usage="stickyHeaderBehavior.Uninitialize " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool Uninitialize();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; override bool Uninitialize();" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Uninitialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Detaches the behavior from the associated object.
            </summary>
        <returns>
          <c>true</c> if detaching succeeded; otherwise <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>