<Type Name="ThemeListener" FullName="Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener">
  <TypeSignature Language="C#" Value="public sealed class ThemeListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThemeListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThemeListener" />
  <TypeSignature Language="F#" Value="type ThemeListener = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThemeListener sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class ThemeListener sealed" />
  <TypeSignature Language="C++ WINRT" Value="class ThemeListener sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.AllowForWeb</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Class which listens for changes to Application Theme or High Contrast Modes
            and Signals an Event when they occur.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThemeListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThemeListener();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ThemeListener();" />
      <MemberSignature Language="C++ WINRT" Value=" ThemeListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTheme">
      <MemberSignature Language="C#" Value="public Windows.UI.Xaml.ApplicationTheme CurrentTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Windows.UI.Xaml.ApplicationTheme CurrentTheme" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.CurrentTheme" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentTheme As ApplicationTheme" />
      <MemberSignature Language="F#" Value="member this.CurrentTheme : Windows.UI.Xaml.ApplicationTheme with get, set" Usage="Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.CurrentTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Windows::UI::Xaml::ApplicationTheme CurrentTheme { Windows::UI::Xaml::ApplicationTheme get(); void set(Windows::UI::Xaml::ApplicationTheme value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Windows::UI::Xaml::ApplicationTheme CurrentTheme { Windows::UI::Xaml::ApplicationTheme get(); void set(Windows::UI::Xaml::ApplicationTheme value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.UI.Xaml.ApplicationTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Current Theme.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThemeName">
      <MemberSignature Language="C#" Value="public string CurrentThemeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentThemeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.CurrentThemeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentThemeName As String" />
      <MemberSignature Language="F#" Value="member this.CurrentThemeName : string" Usage="Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.CurrentThemeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentThemeName { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ CurrentThemeName { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Name of the Current Theme.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighContrast">
      <MemberSignature Language="C#" Value="public bool IsHighContrast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighContrast" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.IsHighContrast" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighContrast As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsHighContrast : bool with get, set" Usage="Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.IsHighContrast" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHighContrast { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsHighContrast { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the current theme is high contrast.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThemeChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.Toolkit.Uwp.UI.Helpers.ThemeChangedEvent ThemeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Toolkit.Uwp.UI.Helpers.ThemeChangedEvent ThemeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.ThemeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ThemeChanged As ThemeChangedEvent " />
      <MemberSignature Language="F#" Value="member this.ThemeChanged : Microsoft.Toolkit.Uwp.UI.Helpers.ThemeChangedEvent " Usage="member this.ThemeChanged : Microsoft.Toolkit.Uwp.UI.Helpers.ThemeChangedEvent " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::Toolkit::Uwp::UI::Helpers::ThemeChangedEvent ^ ThemeChanged;" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; event Microsoft::Toolkit::Uwp::UI::Helpers::ThemeChangedEvent ^ ThemeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Helpers.ThemeChangedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event that fires if the Theme changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
